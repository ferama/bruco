// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/ferama/bruco/pkg/kube/apis/brucocontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BrucoProjectLister helps list BrucoProjects.
// All objects returned here must be treated as read-only.
type BrucoProjectLister interface {
	// List lists all BrucoProjects in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BrucoProject, err error)
	// BrucoProjects returns an object that can list and get BrucoProjects.
	BrucoProjects(namespace string) BrucoProjectNamespaceLister
	BrucoProjectListerExpansion
}

// brucoProjectLister implements the BrucoProjectLister interface.
type brucoProjectLister struct {
	indexer cache.Indexer
}

// NewBrucoProjectLister returns a new BrucoProjectLister.
func NewBrucoProjectLister(indexer cache.Indexer) BrucoProjectLister {
	return &brucoProjectLister{indexer: indexer}
}

// List lists all BrucoProjects in the indexer.
func (s *brucoProjectLister) List(selector labels.Selector) (ret []*v1alpha1.BrucoProject, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BrucoProject))
	})
	return ret, err
}

// BrucoProjects returns an object that can list and get BrucoProjects.
func (s *brucoProjectLister) BrucoProjects(namespace string) BrucoProjectNamespaceLister {
	return brucoProjectNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BrucoProjectNamespaceLister helps list and get BrucoProjects.
// All objects returned here must be treated as read-only.
type BrucoProjectNamespaceLister interface {
	// List lists all BrucoProjects in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BrucoProject, err error)
	// Get retrieves the BrucoProject from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.BrucoProject, error)
	BrucoProjectNamespaceListerExpansion
}

// brucoProjectNamespaceLister implements the BrucoProjectNamespaceLister
// interface.
type brucoProjectNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BrucoProjects in the indexer for a given namespace.
func (s brucoProjectNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BrucoProject, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BrucoProject))
	})
	return ret, err
}

// Get retrieves the BrucoProject from the indexer for a given namespace and name.
func (s brucoProjectNamespaceLister) Get(name string) (*v1alpha1.BrucoProject, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("brucoproject"), name)
	}
	return obj.(*v1alpha1.BrucoProject), nil
}
