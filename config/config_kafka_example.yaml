processor:
  handlerURL: ./hack/examples/basic
  # OPTIONAL: defult handler
  moduleName: handler
  workers: 3
  env:
    - name: VAR1
      value: var1-value
    - name: VAR2
      value: var2-value

source:
  kind: kafka
  brokers:
    - localhost:9092
  topics:
    - test1
    - test2
  # OPTIONAL: default latest
  offset: latest # values: latest, earliest
  consumerGroup: my-consumer-group
  # OPTIONAL: default range
  balanceStrategy: range # values: range, sticky, roundrobin
  # NOTE: the async version (fireAndForget=true) will not guarantee
  # messages handling order between same partition
  fireAndForget: false
  # OPTIONAL: default 60
  # Increase this one if you have slow consumers to prevent
  # rebalance loop
  rebalanceTimeout: 120
  # OPTIONAL: default to 256. Put a low vaclue here in case of slow consumers
  # to prevent rebalancing loop. It can be as low as 0
  channelBufferSize: 256
  # OPTIONAL: default 1024 * 1024. Again for slow consumers you could keep this low
  fetchDefaultBytes: 8

# OPTIONAL: you can have a source and a processor without a sink
sink:
  kind: kafka
  brokers:
    - localhost:9092
  topic: test-out
  # OPTIONAL: target partition
  partition: 42
  # OPTIONAL: default hash if partition is not defined
  partitioner: hash # values: manual, hash, random
