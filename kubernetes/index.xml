<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Bruco üêõ</title><link>https://ferama.github.io/bruco/kubernetes/</link><description>Recent content in Kubernetes on Bruco üêõ</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ferama.github.io/bruco/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Bruco on kubernetes</title><link>https://ferama.github.io/bruco/kubernetes/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ferama.github.io/bruco/kubernetes/kubernetes/</guid><description>Bruco on kubernetes is supported by a custom resource and controller.
This is a resource instance definition example:
apiVersion: bruco.ferama.github.io/v1alpha1 kind: Bruco metadata: name: example-bruco-s3 spec: replicas: 1 env: - name: AWS_ACCESS_KEY_ID value: bruco - name: AWS_SECRET_ACCESS_KEY value: bruco123 functionURL: s3://bruco-minio.bruco:9000/brucos/image-classifier.zip stream: processor: workers: 2 source: kind: http The resource supports the following fields:
yaml path description replicas the bruco pod replicas that should be instantiated image if you wish to set a custom docker image imagePullPolicy standard kubernetes imagePullPolicy imagePullSecrets standard kubernetes imagePullSecrets resources standard kubernetes resources limit and requests env an array of objects of kind name, value that defines env vars exposed to the pods functionURL a function package url.</description></item></channel></rss>